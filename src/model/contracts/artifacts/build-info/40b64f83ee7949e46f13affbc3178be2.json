{
	"id": "40b64f83ee7949e46f13affbc3178be2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"ConnectionRelayBubble.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./AccessControlledStorage.sol\";\nimport \"./AccessControlBits.sol\";\n\n\ncontract ConnectionRelayBubble is AccessControlledStorage {\n\n  address public owner = msg.sender;\n  bool terminated = false;\n\n  function getAccessPermissions( address user, uint256 contentId ) external view override returns (uint256) {\n    if (terminated) return BUBBLE_TERMINATED_BIT;\n    else if (contentId == 0 && user != owner) return NO_PERMISSIONS;\n    else return DIRECTORY_BIT | READ_BIT | WRITE_BIT | APPEND_BIT;\n  }\n\n  function terminate() external {\n    require(msg.sender == owner, \"permission denied\");\n    terminated = true;\n  }\n\n}"
			},
			"AccessControlBits.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @dev Access control bits, as returned by the AccessControlledStorage getAccessPermissions \n * method.\n * \n * Permissions are a 256 bit field formatted with posix-like file permissions.  Only the top\n * 16 most significant bits are reserved for Bubble Protocol.  The rest are free for\n * application use.\n * \n *   Bit    Purpose\n *   -----  -------------------------------------------------\n *   255       terminated (1 = bubble terminated, 0 = active)\n *   254       directory\n *   253       read\n *   252       write\n *   251       append\n *   250       execute\n *   240..249  reserved for Bubble Protocol future extension\n *   0..239    user-defined\n */\n\n// Bits\nuint constant BUBBLE_TERMINATED_BIT = 1 << 255;\nuint constant DIRECTORY_BIT = 1 << 254;\nuint constant READ_BIT = 1 << 253;\nuint constant WRITE_BIT = 1 << 252;\nuint constant APPEND_BIT = 1 << 251;\nuint constant EXECUTE_BIT = 1 << 250;\n\n// Combinations\nuint constant NO_PERMISSIONS = 0;\nuint constant RWA_BITS = 7 << 251;\nuint constant DRWA_BITS = 15 << 251;\nuint constant RWAX_BITS = 15 << 250;\n"
			},
			"AccessControlledStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * AccessControlledStorage interface\n * \n * Any smart contract that implements this interface can control off-chain storage using the \n * Bubble Protocol.\n */\n\ninterface AccessControlledStorage {\n\n  /**\n   * Provides the access permissions for off-chain content controlled by this contract.  An \n   * off-chain storage service calls this method to obtain a specific user's permissions for \n   * accessing a given file or directory.  The method must return a bit field, with POSIX-like \n   * bits for terminated, directory, read, write, append and execute (tdrwax).\n   * \n   * See AccessControlBits.sol for a complete definition of the bit field returned by this\n   * method.\n   * \n   * Note, the following content IDs are reserved:\n   * \n   *   CID  Purpose\n   *   ---  ------------------------------------------------------------------------------------------\n   *   0    The root of the bubble itself.  Any user with write permission to id 0 can construct the \n   *        bubble on an off-chain storage service.  Any user with read permission can list the\n   *        contents of the bubble's root directory.  ID 0 is always considered a directory and so the \n   *        Directory Bit permission returned by this contract is ignored.  \n   * \n   * @param user the user requesting access\n   * @param contentId the id of the content (file or directory) being requested\n   */\n\n  function getAccessPermissions( address user, uint256 contentId ) external view returns (uint256);\n\n}\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"AccessControlledStorage.sol": {
				"AccessControlledStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "contentId",
									"type": "uint256"
								}
							],
							"name": "getAccessPermissions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getAccessPermissions(address,uint256)": {
								"params": {
									"contentId": "the id of the content (file or directory) being requested",
									"user": "the user requesting access"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAccessPermissions(address,uint256)": "c48dbf6a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"contentId\",\"type\":\"uint256\"}],\"name\":\"getAccessPermissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAccessPermissions(address,uint256)\":{\"params\":{\"contentId\":\"the id of the content (file or directory) being requested\",\"user\":\"the user requesting access\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAccessPermissions(address,uint256)\":{\"notice\":\"Provides the access permissions for off-chain content controlled by this contract.  An  off-chain storage service calls this method to obtain a specific user's permissions for  accessing a given file or directory.  The method must return a bit field, with POSIX-like  bits for terminated, directory, read, write, append and execute (tdrwax).  See AccessControlBits.sol for a complete definition of the bit field returned by this method.  Note, the following content IDs are reserved:    CID  Purpose   ---  ------------------------------------------------------------------------------------------   0    The root of the bubble itself.  Any user with write permission to id 0 can construct the         bubble on an off-chain storage service.  Any user with read permission can list the        contents of the bubble's root directory.  ID 0 is always considered a directory and so the         Directory Bit permission returned by this contract is ignored.   \"}},\"notice\":\"AccessControlledStorage interface  Any smart contract that implements this interface can control off-chain storage using the  Bubble Protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"AccessControlledStorage.sol\":\"AccessControlledStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"AccessControlledStorage.sol\":{\"keccak256\":\"0x87fcb849962c533440b276e5db948b1ab7e65bd1039f6449883a409a54ac1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03325e566a6d0099248d055ca40ef0622f8d61c7d6fd01ff7fce6d53ef673ee6\",\"dweb:/ipfs/QmPdX8ZCmwKTm6o37ZYipgaEWUwHzgPYuZd5yXfdeE1tpK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getAccessPermissions(address,uint256)": {
								"notice": "Provides the access permissions for off-chain content controlled by this contract.  An  off-chain storage service calls this method to obtain a specific user's permissions for  accessing a given file or directory.  The method must return a bit field, with POSIX-like  bits for terminated, directory, read, write, append and execute (tdrwax).  See AccessControlBits.sol for a complete definition of the bit field returned by this method.  Note, the following content IDs are reserved:    CID  Purpose   ---  ------------------------------------------------------------------------------------------   0    The root of the bubble itself.  Any user with write permission to id 0 can construct the         bubble on an off-chain storage service.  Any user with read permission can list the        contents of the bubble's root directory.  ID 0 is always considered a directory and so the         Directory Bit permission returned by this contract is ignored.   "
							}
						},
						"notice": "AccessControlledStorage interface  Any smart contract that implements this interface can control off-chain storage using the  Bubble Protocol.",
						"version": 1
					}
				}
			},
			"ConnectionRelayBubble.sol": {
				"ConnectionRelayBubble": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "contentId",
									"type": "uint256"
								}
							],
							"name": "getAccessPermissions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "terminate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getAccessPermissions(address,uint256)": {
								"params": {
									"contentId": "the id of the content (file or directory) being requested",
									"user": "the user requesting access"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ConnectionRelayBubble.sol\":134:679  contract ConnectionRelayBubble is AccessControlledStorage {... */\n  mstore(0x40, 0x80)\n    /* \"ConnectionRelayBubble.sol\":220:230  msg.sender */\n  caller\n    /* \"ConnectionRelayBubble.sol\":197:230  address public owner = msg.sender */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ConnectionRelayBubble.sol\":252:257  false */\n  0x00\n    /* \"ConnectionRelayBubble.sol\":234:257  bool terminated = false */\n  dup1\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ConnectionRelayBubble.sol\":134:679  contract ConnectionRelayBubble is AccessControlledStorage {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ConnectionRelayBubble.sol\":134:679  contract ConnectionRelayBubble is AccessControlledStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0c08bf88\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc48dbf6a\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ConnectionRelayBubble.sol\":563:676  function terminate() external {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"ConnectionRelayBubble.sol\":197:230  address public owner = msg.sender */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ConnectionRelayBubble.sol\":262:559  function getAccessPermissions( address user, uint256 contentId ) external view override returns (uint256) {... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ConnectionRelayBubble.sol\":563:676  function terminate() external {... */\n    tag_7:\n        /* \"ConnectionRelayBubble.sol\":621:626  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ConnectionRelayBubble.sol\":607:626  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ConnectionRelayBubble.sol\":607:617  msg.sender */\n      caller\n        /* \"ConnectionRelayBubble.sol\":607:626  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ConnectionRelayBubble.sol\":599:648  require(msg.sender == owner, \"permission denied\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"ConnectionRelayBubble.sol\":667:671  true */\n      0x01\n        /* \"ConnectionRelayBubble.sol\":654:664  terminated */\n      0x00\n      0x14\n        /* \"ConnectionRelayBubble.sol\":654:671  terminated = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ConnectionRelayBubble.sol\":563:676  function terminate() external {... */\n      jump\t// out\n        /* \"ConnectionRelayBubble.sol\":197:230  address public owner = msg.sender */\n    tag_9:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ConnectionRelayBubble.sol\":262:559  function getAccessPermissions( address user, uint256 contentId ) external view override returns (uint256) {... */\n    tag_15:\n        /* \"ConnectionRelayBubble.sol\":359:366  uint256 */\n      0x00\n        /* \"ConnectionRelayBubble.sol\":378:388  terminated */\n      dup1\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ConnectionRelayBubble.sol\":374:554  if (terminated) return BUBBLE_TERMINATED_BIT;... */\n      iszero\n      tag_23\n      jumpi\n        /* \"AccessControlBits.sol\":767:775  1 << 255 */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"ConnectionRelayBubble.sol\":390:418  return BUBBLE_TERMINATED_BIT */\n      swap1\n      pop\n      jump(tag_22)\n        /* \"ConnectionRelayBubble.sol\":374:554  if (terminated) return BUBBLE_TERMINATED_BIT;... */\n    tag_23:\n        /* \"ConnectionRelayBubble.sol\":446:447  0 */\n      0x00\n        /* \"ConnectionRelayBubble.sol\":433:442  contentId */\n      dup3\n        /* \"ConnectionRelayBubble.sol\":433:447  contentId == 0 */\n      eq\n        /* \"ConnectionRelayBubble.sol\":433:464  contentId == 0 && user != owner */\n      dup1\n      iszero\n      tag_25\n      jumpi\n      pop\n        /* \"ConnectionRelayBubble.sol\":459:464  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ConnectionRelayBubble.sol\":451:464  user != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ConnectionRelayBubble.sol\":451:455  user */\n      dup4\n        /* \"ConnectionRelayBubble.sol\":451:464  user != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ConnectionRelayBubble.sol\":433:464  contentId == 0 && user != owner */\n    tag_25:\n        /* \"ConnectionRelayBubble.sol\":429:554  if (contentId == 0 && user != owner) return NO_PERMISSIONS;... */\n      iszero\n      tag_26\n      jumpi\n        /* \"AccessControlBits.sol\":1011:1012  0 */\n      0x00\n        /* \"ConnectionRelayBubble.sol\":466:487  return NO_PERMISSIONS */\n      swap1\n      pop\n      jump(tag_22)\n        /* \"ConnectionRelayBubble.sol\":429:554  if (contentId == 0 && user != owner) return NO_PERMISSIONS;... */\n    tag_26:\n        /* \"AccessControlBits.sol\":915:923  1 << 251 */\n      0x0800000000000000000000000000000000000000000000000000000000000000\n        /* \"AccessControlBits.sol\":878:886  1 << 252 */\n      0x1000000000000000000000000000000000000000000000000000000000000000\n        /* \"AccessControlBits.sol\":842:850  1 << 253 */\n      0x2000000000000000000000000000000000000000000000000000000000000000\n        /* \"AccessControlBits.sol\":807:815  1 << 254 */\n      0x4000000000000000000000000000000000000000000000000000000000000000\n        /* \"ConnectionRelayBubble.sol\":505:529  DIRECTORY_BIT | READ_BIT */\n      or\n        /* \"ConnectionRelayBubble.sol\":505:541  DIRECTORY_BIT | READ_BIT | WRITE_BIT */\n      or\n        /* \"ConnectionRelayBubble.sol\":505:554  DIRECTORY_BIT | READ_BIT | WRITE_BIT | APPEND_BIT */\n      or\n        /* \"ConnectionRelayBubble.sol\":498:554  return DIRECTORY_BIT | READ_BIT | WRITE_BIT | APPEND_BIT */\n      swap1\n      pop\n        /* \"ConnectionRelayBubble.sol\":262:559  function getAccessPermissions( address user, uint256 contentId ) external view override returns (uint256) {... */\n    tag_22:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_28:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_29:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_46\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_28\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_30:\n        /* \"#utility.yul\":328:352   */\n      tag_48\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_29\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_11:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_50\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_30\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_32:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_34:\n        /* \"#utility.yul\":993:1017   */\n      tag_55\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_29\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_56:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_35:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_58\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_34\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1270   */\n    tag_36:\n        /* \"#utility.yul\":1230:1237   */\n      0x00\n        /* \"#utility.yul\":1259:1264   */\n      dup2\n        /* \"#utility.yul\":1248:1264   */\n      swap1\n      pop\n        /* \"#utility.yul\":1193:1270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1398   */\n    tag_37:\n        /* \"#utility.yul\":1349:1373   */\n      tag_61\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1349:1373   */\n      tag_36\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1342:1347   */\n      dup2\n        /* \"#utility.yul\":1339:1374   */\n      eq\n        /* \"#utility.yul\":1329:1392   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1329:1392   */\n    tag_62:\n        /* \"#utility.yul\":1276:1398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1543   */\n    tag_38:\n        /* \"#utility.yul\":1450:1455   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup2\n        /* \"#utility.yul\":1475:1495   */\n      calldataload\n        /* \"#utility.yul\":1466:1495   */\n      swap1\n      pop\n        /* \"#utility.yul\":1504:1537   */\n      tag_64\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1504:1537   */\n      tag_37\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1404:1543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:2023   */\n    tag_14:\n        /* \"#utility.yul\":1617:1623   */\n      0x00\n        /* \"#utility.yul\":1625:1631   */\n      dup1\n        /* \"#utility.yul\":1674:1676   */\n      0x40\n        /* \"#utility.yul\":1662:1671   */\n      dup4\n        /* \"#utility.yul\":1653:1660   */\n      dup6\n        /* \"#utility.yul\":1649:1672   */\n      sub\n        /* \"#utility.yul\":1645:1677   */\n      slt\n        /* \"#utility.yul\":1642:1761   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1680:1759   */\n      tag_67\n      tag_32\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1642:1761   */\n    tag_66:\n        /* \"#utility.yul\":1800:1801   */\n      0x00\n        /* \"#utility.yul\":1825:1878   */\n      tag_68\n        /* \"#utility.yul\":1870:1877   */\n      dup6\n        /* \"#utility.yul\":1861:1867   */\n      dup3\n        /* \"#utility.yul\":1850:1859   */\n      dup7\n        /* \"#utility.yul\":1846:1868   */\n      add\n        /* \"#utility.yul\":1825:1878   */\n      tag_35\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1815:1878   */\n      swap3\n      pop\n        /* \"#utility.yul\":1771:1888   */\n      pop\n        /* \"#utility.yul\":1927:1929   */\n      0x20\n        /* \"#utility.yul\":1953:2006   */\n      tag_69\n        /* \"#utility.yul\":1998:2005   */\n      dup6\n        /* \"#utility.yul\":1989:1995   */\n      dup3\n        /* \"#utility.yul\":1978:1987   */\n      dup7\n        /* \"#utility.yul\":1974:1996   */\n      add\n        /* \"#utility.yul\":1953:2006   */\n      tag_38\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1943:2006   */\n      swap2\n      pop\n        /* \"#utility.yul\":1898:2016   */\n      pop\n        /* \"#utility.yul\":1549:2023   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2147   */\n    tag_39:\n        /* \"#utility.yul\":2116:2140   */\n      tag_71\n        /* \"#utility.yul\":2134:2139   */\n      dup2\n        /* \"#utility.yul\":2116:2140   */\n      tag_36\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2111:2114   */\n      dup3\n        /* \"#utility.yul\":2104:2141   */\n      mstore\n        /* \"#utility.yul\":2029:2147   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2153:2375   */\n    tag_17:\n        /* \"#utility.yul\":2246:2250   */\n      0x00\n        /* \"#utility.yul\":2284:2286   */\n      0x20\n        /* \"#utility.yul\":2273:2282   */\n      dup3\n        /* \"#utility.yul\":2269:2287   */\n      add\n        /* \"#utility.yul\":2261:2287   */\n      swap1\n      pop\n        /* \"#utility.yul\":2297:2368   */\n      tag_73\n        /* \"#utility.yul\":2365:2366   */\n      0x00\n        /* \"#utility.yul\":2354:2363   */\n      dup4\n        /* \"#utility.yul\":2350:2367   */\n      add\n        /* \"#utility.yul\":2341:2347   */\n      dup5\n        /* \"#utility.yul\":2297:2368   */\n      tag_39\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2153:2375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:2550   */\n    tag_40:\n        /* \"#utility.yul\":2465:2476   */\n      0x00\n        /* \"#utility.yul\":2499:2505   */\n      dup3\n        /* \"#utility.yul\":2494:2497   */\n      dup3\n        /* \"#utility.yul\":2487:2506   */\n      mstore\n        /* \"#utility.yul\":2539:2543   */\n      0x20\n        /* \"#utility.yul\":2534:2537   */\n      dup3\n        /* \"#utility.yul\":2530:2544   */\n      add\n        /* \"#utility.yul\":2515:2544   */\n      swap1\n      pop\n        /* \"#utility.yul\":2381:2550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2556:2723   */\n    tag_41:\n        /* \"#utility.yul\":2696:2715   */\n      0x7065726d697373696f6e2064656e696564000000000000000000000000000000\n        /* \"#utility.yul\":2692:2693   */\n      0x00\n        /* \"#utility.yul\":2684:2690   */\n      dup3\n        /* \"#utility.yul\":2680:2694   */\n      add\n        /* \"#utility.yul\":2673:2716   */\n      mstore\n        /* \"#utility.yul\":2556:2723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2729:3095   */\n    tag_42:\n        /* \"#utility.yul\":2871:2874   */\n      0x00\n        /* \"#utility.yul\":2892:2959   */\n      tag_77\n        /* \"#utility.yul\":2956:2958   */\n      0x11\n        /* \"#utility.yul\":2951:2954   */\n      dup4\n        /* \"#utility.yul\":2892:2959   */\n      tag_40\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2885:2959   */\n      swap2\n      pop\n        /* \"#utility.yul\":2968:3061   */\n      tag_78\n        /* \"#utility.yul\":3057:3060   */\n      dup3\n        /* \"#utility.yul\":2968:3061   */\n      tag_41\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3086:3088   */\n      0x20\n        /* \"#utility.yul\":3081:3084   */\n      dup3\n        /* \"#utility.yul\":3077:3089   */\n      add\n        /* \"#utility.yul\":3070:3089   */\n      swap1\n      pop\n        /* \"#utility.yul\":2729:3095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3101:3520   */\n    tag_21:\n        /* \"#utility.yul\":3267:3271   */\n      0x00\n        /* \"#utility.yul\":3305:3307   */\n      0x20\n        /* \"#utility.yul\":3294:3303   */\n      dup3\n        /* \"#utility.yul\":3290:3308   */\n      add\n        /* \"#utility.yul\":3282:3308   */\n      swap1\n      pop\n        /* \"#utility.yul\":3354:3363   */\n      dup2\n        /* \"#utility.yul\":3348:3352   */\n      dup2\n        /* \"#utility.yul\":3344:3364   */\n      sub\n        /* \"#utility.yul\":3340:3341   */\n      0x00\n        /* \"#utility.yul\":3329:3338   */\n      dup4\n        /* \"#utility.yul\":3325:3342   */\n      add\n        /* \"#utility.yul\":3318:3365   */\n      mstore\n        /* \"#utility.yul\":3382:3513   */\n      tag_80\n        /* \"#utility.yul\":3508:3512   */\n      dup2\n        /* \"#utility.yul\":3382:3513   */\n      tag_42\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3374:3513   */\n      swap1\n      pop\n        /* \"#utility.yul\":3101:3520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122073f816c6df1bb9f25b6bbcf6804e44cab1d5d9b30c3cf21123ae913ec27ccf2a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff02191690831515021790555034801561006a57600080fd5b506104858061007a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630c08bf88146100465780638da5cb5b14610050578063c48dbf6a1461006e575b600080fd5b61004e61009e565b005b610058610149565b60405161006591906102e6565b60405180910390f35b61008860048036038101906100839190610368565b61016d565b60405161009591906103b7565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101239061042f565b60405180910390fd5b6001600060146101000a81548160ff021916908315150217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060149054906101000a900460ff16156101ab577f8000000000000000000000000000000000000000000000000000000000000000905061029f565b600082148015610207575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610215576000905061029f565b7f08000000000000000000000000000000000000000000000000000000000000007f10000000000000000000000000000000000000000000000000000000000000007f20000000000000000000000000000000000000000000000000000000000000007f400000000000000000000000000000000000000000000000000000000000000017171790505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102d0826102a5565b9050919050565b6102e0816102c5565b82525050565b60006020820190506102fb60008301846102d7565b92915050565b600080fd5b61030f816102c5565b811461031a57600080fd5b50565b60008135905061032c81610306565b92915050565b6000819050919050565b61034581610332565b811461035057600080fd5b50565b6000813590506103628161033c565b92915050565b6000806040838503121561037f5761037e610301565b5b600061038d8582860161031d565b925050602061039e85828601610353565b9150509250929050565b6103b181610332565b82525050565b60006020820190506103cc60008301846103a8565b92915050565b600082825260208201905092915050565b7f7065726d697373696f6e2064656e696564000000000000000000000000000000600082015250565b60006104196011836103d2565b9150610424826103e3565b602082019050919050565b600060208201905081810360008301526104488161040c565b905091905056fea264697066735822122073f816c6df1bb9f25b6bbcf6804e44cab1d5d9b30c3cf21123ae913ec27ccf2a64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x485 DUP1 PUSH2 0x7A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC08BF88 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xC48DBF6A EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x368 JUMP JUMPDEST PUSH2 0x16D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123 SWAP1 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1AB JUMPI PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x29F JUMP JUMPDEST PUSH1 0x0 DUP3 EQ DUP1 ISZERO PUSH2 0x207 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x29F JUMP JUMPDEST PUSH32 0x800000000000000000000000000000000000000000000000000000000000000 PUSH32 0x1000000000000000000000000000000000000000000000000000000000000000 PUSH32 0x2000000000000000000000000000000000000000000000000000000000000000 PUSH32 0x4000000000000000000000000000000000000000000000000000000000000000 OR OR OR SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D0 DUP3 PUSH2 0x2A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E0 DUP2 PUSH2 0x2C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30F DUP2 PUSH2 0x2C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32C DUP2 PUSH2 0x306 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x345 DUP2 PUSH2 0x332 JUMP JUMPDEST DUP2 EQ PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x362 DUP2 PUSH2 0x33C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37F JUMPI PUSH2 0x37E PUSH2 0x301 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38D DUP6 DUP3 DUP7 ADD PUSH2 0x31D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x39E DUP6 DUP3 DUP7 ADD PUSH2 0x353 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B1 DUP2 PUSH2 0x332 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7065726D697373696F6E2064656E696564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x419 PUSH1 0x11 DUP4 PUSH2 0x3D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x424 DUP3 PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x448 DUP2 PUSH2 0x40C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xF816C6DF1BB9F25B6BBCF6804E44CAB1D5D9B30C EXTCODECOPY CALLCODE GT 0x23 0xAE SWAP2 RETURNDATACOPY 0xC2 PUSH29 0xCF2A64736F6C6343000812003300000000000000000000000000000000 ",
							"sourceMap": "134:545:2:-:0;;;220:10;197:33;;;;;;;;;;;;;;;;;;;;252:5;234:23;;;;;;;;;;;;;;;;;;;;134:545;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getAccessPermissions_110": {
									"entryPoint": 365,
									"id": 110,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_74": {
									"entryPoint": 329,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@terminate_126": {
									"entryPoint": 158,
									"id": 126,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_93ad9a0f047d986104837a655695175c2f157f5237cec4cec94702ccbba7538f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_93ad9a0f047d986104837a655695175c2f157f5237cec4cec94702ccbba7538f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_93ad9a0f047d986104837a655695175c2f157f5237cec4cec94702ccbba7538f": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3523:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "659:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "626:6:3",
														"type": ""
													}
												],
												"src": "593:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "780:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1020:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:43:3"
															},
															"nodeType": "YulIf",
															"src": "973:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "956:5:3",
														"type": ""
													}
												],
												"src": "920:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1110:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1078:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1086:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1094:5:3",
														"type": ""
													}
												],
												"src": "1048:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1238:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1248:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1259:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1248:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1220:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1230:7:3",
														"type": ""
													}
												],
												"src": "1193:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1319:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1376:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1342:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1367:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1349:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1349:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1339:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1339:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1332:43:3"
															},
															"nodeType": "YulIf",
															"src": "1329:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:3",
														"type": ""
													}
												],
												"src": "1276:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1456:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1466:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1475:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1504:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1504:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1434:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1442:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1450:5:3",
														"type": ""
													}
												],
												"src": "1404:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1632:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1678:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1680:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1680:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1680:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1653:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1662:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1649:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1649:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1674:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1645:32:3"
															},
															"nodeType": "YulIf",
															"src": "1642:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1771:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1786:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1790:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1815:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1850:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1861:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1846:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1846:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1870:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1825:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1825:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1815:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1898:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1913:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1927:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1917:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1943:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1978:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1989:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1974:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1974:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1998:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1953:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1953:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1943:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1594:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1605:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1617:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1625:6:3",
														"type": ""
													}
												],
												"src": "1549:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2094:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2111:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2134:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2116:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2116:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2082:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2089:3:3",
														"type": ""
													}
												],
												"src": "2029:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2251:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2261:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2273:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2284:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2269:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2261:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2341:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2354:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2365:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2350:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2350:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2297:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2297:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2297:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2223:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2235:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2246:4:3",
														"type": ""
													}
												],
												"src": "2153:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2477:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2499:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2487:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2487:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2487:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2515:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2534:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2539:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2530:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2515:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2449:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2454:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2465:11:3",
														"type": ""
													}
												],
												"src": "2381:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2662:61:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2684:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2692:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2680:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2680:14:3"
																	},
																	{
																		"hexValue": "7065726d697373696f6e2064656e696564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2696:19:3",
																		"type": "",
																		"value": "permission denied"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2673:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2673:43:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2673:43:3"
														}
													]
												},
												"name": "store_literal_in_memory_93ad9a0f047d986104837a655695175c2f157f5237cec4cec94702ccbba7538f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2654:6:3",
														"type": ""
													}
												],
												"src": "2556:167:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2875:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2885:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2951:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2956:2:3",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2892:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2892:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2885:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3057:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_93ad9a0f047d986104837a655695175c2f157f5237cec4cec94702ccbba7538f",
																	"nodeType": "YulIdentifier",
																	"src": "2968:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2968:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2968:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3070:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3081:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3086:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3077:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3077:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3070:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_93ad9a0f047d986104837a655695175c2f157f5237cec4cec94702ccbba7538f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2863:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2871:3:3",
														"type": ""
													}
												],
												"src": "2729:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3272:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3282:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3294:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3305:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3290:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3282:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3329:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3340:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3325:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3325:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3348:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3354:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3344:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3344:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3374:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3508:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_93ad9a0f047d986104837a655695175c2f157f5237cec4cec94702ccbba7538f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3382:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3382:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3374:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_93ad9a0f047d986104837a655695175c2f157f5237cec4cec94702ccbba7538f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3267:4:3",
														"type": ""
													}
												],
												"src": "3101:419:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_93ad9a0f047d986104837a655695175c2f157f5237cec4cec94702ccbba7538f(memPtr) {\n\n        mstore(add(memPtr, 0), \"permission denied\")\n\n    }\n\n    function abi_encode_t_stringliteral_93ad9a0f047d986104837a655695175c2f157f5237cec4cec94702ccbba7538f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_93ad9a0f047d986104837a655695175c2f157f5237cec4cec94702ccbba7538f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_93ad9a0f047d986104837a655695175c2f157f5237cec4cec94702ccbba7538f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_93ad9a0f047d986104837a655695175c2f157f5237cec4cec94702ccbba7538f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630c08bf88146100465780638da5cb5b14610050578063c48dbf6a1461006e575b600080fd5b61004e61009e565b005b610058610149565b60405161006591906102e6565b60405180910390f35b61008860048036038101906100839190610368565b61016d565b60405161009591906103b7565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101239061042f565b60405180910390fd5b6001600060146101000a81548160ff021916908315150217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060149054906101000a900460ff16156101ab577f8000000000000000000000000000000000000000000000000000000000000000905061029f565b600082148015610207575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610215576000905061029f565b7f08000000000000000000000000000000000000000000000000000000000000007f10000000000000000000000000000000000000000000000000000000000000007f20000000000000000000000000000000000000000000000000000000000000007f400000000000000000000000000000000000000000000000000000000000000017171790505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102d0826102a5565b9050919050565b6102e0816102c5565b82525050565b60006020820190506102fb60008301846102d7565b92915050565b600080fd5b61030f816102c5565b811461031a57600080fd5b50565b60008135905061032c81610306565b92915050565b6000819050919050565b61034581610332565b811461035057600080fd5b50565b6000813590506103628161033c565b92915050565b6000806040838503121561037f5761037e610301565b5b600061038d8582860161031d565b925050602061039e85828601610353565b9150509250929050565b6103b181610332565b82525050565b60006020820190506103cc60008301846103a8565b92915050565b600082825260208201905092915050565b7f7065726d697373696f6e2064656e696564000000000000000000000000000000600082015250565b60006104196011836103d2565b9150610424826103e3565b602082019050919050565b600060208201905081810360008301526104488161040c565b905091905056fea264697066735822122073f816c6df1bb9f25b6bbcf6804e44cab1d5d9b30c3cf21123ae913ec27ccf2a64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC08BF88 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xC48DBF6A EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x368 JUMP JUMPDEST PUSH2 0x16D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123 SWAP1 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1AB JUMPI PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x29F JUMP JUMPDEST PUSH1 0x0 DUP3 EQ DUP1 ISZERO PUSH2 0x207 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x29F JUMP JUMPDEST PUSH32 0x800000000000000000000000000000000000000000000000000000000000000 PUSH32 0x1000000000000000000000000000000000000000000000000000000000000000 PUSH32 0x2000000000000000000000000000000000000000000000000000000000000000 PUSH32 0x4000000000000000000000000000000000000000000000000000000000000000 OR OR OR SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D0 DUP3 PUSH2 0x2A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E0 DUP2 PUSH2 0x2C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30F DUP2 PUSH2 0x2C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32C DUP2 PUSH2 0x306 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x345 DUP2 PUSH2 0x332 JUMP JUMPDEST DUP2 EQ PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x362 DUP2 PUSH2 0x33C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37F JUMPI PUSH2 0x37E PUSH2 0x301 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38D DUP6 DUP3 DUP7 ADD PUSH2 0x31D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x39E DUP6 DUP3 DUP7 ADD PUSH2 0x353 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B1 DUP2 PUSH2 0x332 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7065726D697373696F6E2064656E696564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x419 PUSH1 0x11 DUP4 PUSH2 0x3D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x424 DUP3 PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x448 DUP2 PUSH2 0x40C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xF816C6DF1BB9F25B6BBCF6804E44CAB1D5D9B30C EXTCODECOPY CALLCODE GT 0x23 0xAE SWAP2 RETURNDATACOPY 0xC2 PUSH29 0xCF2A64736F6C6343000812003300000000000000000000000000000000 ",
							"sourceMap": "134:545:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;563:113;;;:::i;:::-;;197:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;262:297;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;563:113;621:5;;;;;;;;;;607:19;;:10;:19;;;599:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;667:4;654:10;;:17;;;;;;;;;;;;;;;;;;563:113::o;197:33::-;;;;;;;;;;;;:::o;262:297::-;359:7;378:10;;;;;;;;;;;374:180;;;767:8:0;390:28:2;;;;374:180;446:1;433:9;:14;:31;;;;;459:5;;;;;;;;;;451:13;;:4;:13;;;;433:31;429:125;;;1011:1:0;466:21:2;;;;429:125;915:8:0;878;842;807;505:24:2;:36;:49;498:56;;262:297;;;;;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:77::-;1230:7;1259:5;1248:16;;1193:77;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:474::-;1617:6;1625;1674:2;1662:9;1653:7;1649:23;1645:32;1642:119;;;1680:79;;:::i;:::-;1642:119;1800:1;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1771:117;1927:2;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1898:118;1549:474;;;;;:::o;2029:118::-;2116:24;2134:5;2116:24;:::i;:::-;2111:3;2104:37;2029:118;;:::o;2153:222::-;2246:4;2284:2;2273:9;2269:18;2261:26;;2297:71;2365:1;2354:9;2350:17;2341:6;2297:71;:::i;:::-;2153:222;;;;:::o;2381:169::-;2465:11;2499:6;2494:3;2487:19;2539:4;2534:3;2530:14;2515:29;;2381:169;;;;:::o;2556:167::-;2696:19;2692:1;2684:6;2680:14;2673:43;2556:167;:::o;2729:366::-;2871:3;2892:67;2956:2;2951:3;2892:67;:::i;:::-;2885:74;;2968:93;3057:3;2968:93;:::i;:::-;3086:2;3081:3;3077:12;3070:19;;2729:366;;;:::o;3101:419::-;3267:4;3305:2;3294:9;3290:18;3282:26;;3354:9;3348:4;3344:20;3340:1;3329:9;3325:17;3318:47;3382:131;3508:4;3382:131;:::i;:::-;3374:139;;3101:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "231400",
								"executionCost": "48858",
								"totalCost": "280258"
							},
							"external": {
								"getAccessPermissions(address,uint256)": "infinite",
								"owner()": "2511",
								"terminate()": "26606"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 679,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 134,
									"end": 679,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 134,
									"end": 679,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 220,
									"end": 230,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 197,
									"end": 230,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 230,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 230,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 197,
									"end": 230,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 197,
									"end": 230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 197,
									"end": 230,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 197,
									"end": 230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 197,
									"end": 230,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 197,
									"end": 230,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 197,
									"end": 230,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 197,
									"end": 230,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 197,
									"end": 230,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 230,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 197,
									"end": 230,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 197,
									"end": 230,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 197,
									"end": 230,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 197,
									"end": 230,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 197,
									"end": 230,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 230,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 197,
									"end": 230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 252,
									"end": 257,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 257,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 234,
									"end": 257,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 234,
									"end": 257,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 234,
									"end": 257,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 234,
									"end": 257,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 234,
									"end": 257,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 234,
									"end": 257,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 234,
									"end": 257,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 234,
									"end": 257,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 234,
									"end": 257,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 234,
									"end": 257,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 234,
									"end": 257,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 234,
									"end": 257,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 234,
									"end": 257,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 234,
									"end": 257,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 234,
									"end": 257,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 234,
									"end": 257,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 234,
									"end": 257,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 234,
									"end": 257,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 234,
									"end": 257,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 134,
									"end": 679,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 134,
									"end": 679,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 134,
									"end": 679,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 134,
									"end": 679,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 679,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 134,
									"end": 679,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 679,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 134,
									"end": 679,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 134,
									"end": 679,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 679,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 134,
									"end": 679,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 134,
									"end": 679,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 679,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 134,
									"end": 679,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 679,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 679,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 134,
									"end": 679,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 679,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073f816c6df1bb9f25b6bbcf6804e44cab1d5d9b30c3cf21123ae913ec27ccf2a64736f6c63430008120033",
									".code": [
										{
											"begin": 134,
											"end": 679,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "PUSH",
											"source": 2,
											"value": "C08BF88"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "PUSH",
											"source": 2,
											"value": "C48DBF6A"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 134,
											"end": 679,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 563,
											"end": 676,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 563,
											"end": 676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 563,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 563,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 563,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 563,
											"end": 676,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 563,
											"end": 676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 563,
											"end": 676,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 197,
											"end": 230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 197,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 197,
											"end": 230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 197,
											"end": 230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 197,
											"end": 230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 197,
											"end": 230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 197,
											"end": 230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 262,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 262,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 559,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 262,
											"end": 559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 262,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 262,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 262,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 262,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 262,
											"end": 559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 262,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 262,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 563,
											"end": 676,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 563,
											"end": 676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 621,
											"end": 626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 621,
											"end": 626,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 621,
											"end": 626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 621,
											"end": 626,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 621,
											"end": 626,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 621,
											"end": 626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 621,
											"end": 626,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 621,
											"end": 626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 621,
											"end": 626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 607,
											"end": 626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 607,
											"end": 626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 607,
											"end": 617,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 607,
											"end": 626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 607,
											"end": 626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 607,
											"end": 626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 599,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 599,
											"end": 648,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 599,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 648,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 599,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 599,
											"end": 648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 599,
											"end": 648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 599,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 599,
											"end": 648,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 599,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 599,
											"end": 648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 599,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 599,
											"end": 648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 599,
											"end": 648,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 599,
											"end": 648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 599,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 648,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 599,
											"end": 648,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 599,
											"end": 648,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 599,
											"end": 648,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 599,
											"end": 648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 599,
											"end": 648,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 599,
											"end": 648,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 599,
											"end": 648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 667,
											"end": 671,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 654,
											"end": 664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 664,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 654,
											"end": 671,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 671,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 654,
											"end": 671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 654,
											"end": 671,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 654,
											"end": 671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 654,
											"end": 671,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 671,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 654,
											"end": 671,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 654,
											"end": 671,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 654,
											"end": 671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 654,
											"end": 671,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 654,
											"end": 671,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 654,
											"end": 671,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 654,
											"end": 671,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 654,
											"end": 671,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 654,
											"end": 671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 654,
											"end": 671,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 654,
											"end": 671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 563,
											"end": 676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 197,
											"end": 230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 197,
											"end": 230,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 197,
											"end": 230,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 197,
											"end": 230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 262,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 359,
											"end": 366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 388,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 378,
											"end": 388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 388,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 378,
											"end": 388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 388,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 378,
											"end": 388,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 378,
											"end": 388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 388,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 378,
											"end": 388,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 378,
											"end": 388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 374,
											"end": 554,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 374,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 374,
											"end": 554,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 767,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 390,
											"end": 418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 390,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 374,
											"end": 554,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 374,
											"end": 554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 446,
											"end": 447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 433,
											"end": 447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 433,
											"end": 464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 433,
											"end": 464,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 433,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 433,
											"end": 464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 433,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 459,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 459,
											"end": 464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 459,
											"end": 464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 459,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 459,
											"end": 464,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 459,
											"end": 464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 459,
											"end": 464,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 459,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 459,
											"end": 464,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 451,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 451,
											"end": 464,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 451,
											"end": 455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 451,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 451,
											"end": 464,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 451,
											"end": 464,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 451,
											"end": 464,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 433,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 433,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 429,
											"end": 554,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 429,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 429,
											"end": 554,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 466,
											"end": 487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 466,
											"end": 487,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 429,
											"end": 554,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 429,
											"end": 554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 915,
											"end": 923,
											"name": "PUSH",
											"source": 0,
											"value": "800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 878,
											"end": 886,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 842,
											"end": 850,
											"name": "PUSH",
											"source": 0,
											"value": "2000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "4000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 505,
											"end": 529,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 505,
											"end": 541,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 505,
											"end": 554,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 498,
											"end": 554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 498,
											"end": 554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 262,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 262,
											"end": 559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1230,
											"end": 1237,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1264,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1264,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1264,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1349,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1504,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1677,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1680,
											"end": 1759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1801,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1868,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1825,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1888,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1974,
											"end": 1996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1953,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 2016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2147,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2029,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2116,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2134,
											"end": 2139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2116,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2116,
											"end": 2140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2116,
											"end": 2140,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2116,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2141,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2147,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2147,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2286,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2287,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2365,
											"end": 2366,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2363,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2341,
											"end": 2347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2297,
											"end": 2368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2368,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2297,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2153,
											"end": 2375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2153,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2381,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2465,
											"end": 2476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2487,
											"end": 2506,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2534,
											"end": 2537,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2515,
											"end": 2544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2515,
											"end": 2544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2550,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2550,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2723,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2556,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2715,
											"name": "PUSH",
											"source": 3,
											"value": "7065726D697373696F6E2064656E696564000000000000000000000000000000"
										},
										{
											"begin": 2692,
											"end": 2693,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2690,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2694,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2716,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 3095,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2729,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2874,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2956,
											"end": 2958,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2951,
											"end": 2954,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2892,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2892,
											"end": 2959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2892,
											"end": 2959,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2892,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2885,
											"end": 2959,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2885,
											"end": 2959,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3057,
											"end": 3060,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2968,
											"end": 3061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3061,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2968,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3088,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3081,
											"end": 3084,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3089,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3089,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 3095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 3095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 3095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3101,
											"end": 3520,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3101,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3267,
											"end": 3271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3307,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3303,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3282,
											"end": 3308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3282,
											"end": 3308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3354,
											"end": 3363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3344,
											"end": 3364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3338,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3325,
											"end": 3342,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3318,
											"end": 3365,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3382,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3508,
											"end": 3512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3382,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3382,
											"end": 3513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3382,
											"end": 3513,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3382,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3374,
											"end": 3513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3374,
											"end": 3513,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3101,
											"end": 3520,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3101,
											"end": 3520,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3101,
											"end": 3520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3101,
											"end": 3520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"AccessControlBits.sol",
								"AccessControlledStorage.sol",
								"ConnectionRelayBubble.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getAccessPermissions(address,uint256)": "c48dbf6a",
							"owner()": "8da5cb5b",
							"terminate()": "0c08bf88"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"contentId\",\"type\":\"uint256\"}],\"name\":\"getAccessPermissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terminate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAccessPermissions(address,uint256)\":{\"params\":{\"contentId\":\"the id of the content (file or directory) being requested\",\"user\":\"the user requesting access\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAccessPermissions(address,uint256)\":{\"notice\":\"Provides the access permissions for off-chain content controlled by this contract.  An  off-chain storage service calls this method to obtain a specific user's permissions for  accessing a given file or directory.  The method must return a bit field, with POSIX-like  bits for terminated, directory, read, write, append and execute (tdrwax).  See AccessControlBits.sol for a complete definition of the bit field returned by this method.  Note, the following content IDs are reserved:    CID  Purpose   ---  ------------------------------------------------------------------------------------------   0    The root of the bubble itself.  Any user with write permission to id 0 can construct the         bubble on an off-chain storage service.  Any user with read permission can list the        contents of the bubble's root directory.  ID 0 is always considered a directory and so the         Directory Bit permission returned by this contract is ignored.   \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ConnectionRelayBubble.sol\":\"ConnectionRelayBubble\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"AccessControlBits.sol\":{\"keccak256\":\"0x5074b55c7fd9399d90fcc29c094d1e3ac427ed8a7a9bd90a60f2738d6839eb5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a1fc60395fccbb06875bd47250f7d7dff74427bd3808c542fd94b8457f6630b\",\"dweb:/ipfs/QmXzaCsEwLfG2C3mDLKhP7ZftMy1uWp8bNy1aGdfHKXeEM\"]},\"AccessControlledStorage.sol\":{\"keccak256\":\"0x87fcb849962c533440b276e5db948b1ab7e65bd1039f6449883a409a54ac1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03325e566a6d0099248d055ca40ef0622f8d61c7d6fd01ff7fce6d53ef673ee6\",\"dweb:/ipfs/QmPdX8ZCmwKTm6o37ZYipgaEWUwHzgPYuZd5yXfdeE1tpK\"]},\"ConnectionRelayBubble.sol\":{\"keccak256\":\"0x550214214f87e6af2726883140154aa777fc497234c97788f0bd7c86a8e135d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://610ffed4e270986b5dd5a6877b938cf0261d1cb02148b46672316116c8975f7b\",\"dweb:/ipfs/Qmbpsb5MsA7sayE8XDivctfaegwJd74KLiSmdJ2VEwfemd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 74,
								"contract": "ConnectionRelayBubble.sol:ConnectionRelayBubble",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 77,
								"contract": "ConnectionRelayBubble.sol:ConnectionRelayBubble",
								"label": "terminated",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getAccessPermissions(address,uint256)": {
								"notice": "Provides the access permissions for off-chain content controlled by this contract.  An  off-chain storage service calls this method to obtain a specific user's permissions for  accessing a given file or directory.  The method must return a bit field, with POSIX-like  bits for terminated, directory, read, write, append and execute (tdrwax).  See AccessControlBits.sol for a complete definition of the bit field returned by this method.  Note, the following content IDs are reserved:    CID  Purpose   ---  ------------------------------------------------------------------------------------------   0    The root of the bubble itself.  Any user with write permission to id 0 can construct the         bubble on an off-chain storage service.  Any user with read permission can list the        contents of the bubble's root directory.  ID 0 is always considered a directory and so the         Directory Bit permission returned by this contract is ignored.   "
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"AccessControlBits.sol": {
				"ast": {
					"absolutePath": "AccessControlBits.sol",
					"exportedSymbols": {
						"APPEND_BIT": [
							27
						],
						"BUBBLE_TERMINATED_BIT": [
							7
						],
						"DIRECTORY_BIT": [
							12
						],
						"DRWA_BITS": [
							45
						],
						"EXECUTE_BIT": [
							32
						],
						"NO_PERMISSIONS": [
							35
						],
						"READ_BIT": [
							17
						],
						"RWAX_BITS": [
							50
						],
						"RWA_BITS": [
							40
						],
						"WRITE_BIT": [
							22
						]
					},
					"id": 51,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"constant": true,
							"id": 7,
							"mutability": "constant",
							"name": "BUBBLE_TERMINATED_BIT",
							"nameLocation": "743:21:0",
							"nodeType": "VariableDeclaration",
							"scope": 51,
							"src": "729:46:0",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 3,
								"name": "uint",
								"nodeType": "ElementaryTypeName",
								"src": "729:4:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"commonType": {
									"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
									"typeString": "int_const 5789...(69 digits omitted)...9968"
								},
								"id": 6,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "31",
									"id": 4,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "767:1:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_1_by_1",
										"typeString": "int_const 1"
									},
									"value": "1"
								},
								"nodeType": "BinaryOperation",
								"operator": "<<",
								"rightExpression": {
									"hexValue": "323535",
									"id": 5,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "772:3:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_255_by_1",
										"typeString": "int_const 255"
									},
									"value": "255"
								},
								"src": "767:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
									"typeString": "int_const 5789...(69 digits omitted)...9968"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 12,
							"mutability": "constant",
							"name": "DIRECTORY_BIT",
							"nameLocation": "791:13:0",
							"nodeType": "VariableDeclaration",
							"scope": 51,
							"src": "777:38:0",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 8,
								"name": "uint",
								"nodeType": "ElementaryTypeName",
								"src": "777:4:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"commonType": {
									"typeIdentifier": "t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1",
									"typeString": "int_const 2894...(69 digits omitted)...9984"
								},
								"id": 11,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "31",
									"id": 9,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "807:1:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_1_by_1",
										"typeString": "int_const 1"
									},
									"value": "1"
								},
								"nodeType": "BinaryOperation",
								"operator": "<<",
								"rightExpression": {
									"hexValue": "323534",
									"id": 10,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "812:3:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_254_by_1",
										"typeString": "int_const 254"
									},
									"value": "254"
								},
								"src": "807:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1",
									"typeString": "int_const 2894...(69 digits omitted)...9984"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 17,
							"mutability": "constant",
							"name": "READ_BIT",
							"nameLocation": "831:8:0",
							"nodeType": "VariableDeclaration",
							"scope": 51,
							"src": "817:33:0",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 13,
								"name": "uint",
								"nodeType": "ElementaryTypeName",
								"src": "817:4:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"commonType": {
									"typeIdentifier": "t_rational_14474011154664524427946373126085988481658748083205070504932198000989141204992_by_1",
									"typeString": "int_const 1447...(69 digits omitted)...4992"
								},
								"id": 16,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "31",
									"id": 14,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "842:1:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_1_by_1",
										"typeString": "int_const 1"
									},
									"value": "1"
								},
								"nodeType": "BinaryOperation",
								"operator": "<<",
								"rightExpression": {
									"hexValue": "323533",
									"id": 15,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "847:3:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_253_by_1",
										"typeString": "int_const 253"
									},
									"value": "253"
								},
								"src": "842:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_14474011154664524427946373126085988481658748083205070504932198000989141204992_by_1",
									"typeString": "int_const 1447...(69 digits omitted)...4992"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 22,
							"mutability": "constant",
							"name": "WRITE_BIT",
							"nameLocation": "866:9:0",
							"nodeType": "VariableDeclaration",
							"scope": 51,
							"src": "852:34:0",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 18,
								"name": "uint",
								"nodeType": "ElementaryTypeName",
								"src": "852:4:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"commonType": {
									"typeIdentifier": "t_rational_7237005577332262213973186563042994240829374041602535252466099000494570602496_by_1",
									"typeString": "int_const 7237...(68 digits omitted)...2496"
								},
								"id": 21,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "31",
									"id": 19,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "878:1:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_1_by_1",
										"typeString": "int_const 1"
									},
									"value": "1"
								},
								"nodeType": "BinaryOperation",
								"operator": "<<",
								"rightExpression": {
									"hexValue": "323532",
									"id": 20,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "883:3:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_252_by_1",
										"typeString": "int_const 252"
									},
									"value": "252"
								},
								"src": "878:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_7237005577332262213973186563042994240829374041602535252466099000494570602496_by_1",
									"typeString": "int_const 7237...(68 digits omitted)...2496"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 27,
							"mutability": "constant",
							"name": "APPEND_BIT",
							"nameLocation": "902:10:0",
							"nodeType": "VariableDeclaration",
							"scope": 51,
							"src": "888:35:0",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 23,
								"name": "uint",
								"nodeType": "ElementaryTypeName",
								"src": "888:4:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"commonType": {
									"typeIdentifier": "t_rational_3618502788666131106986593281521497120414687020801267626233049500247285301248_by_1",
									"typeString": "int_const 3618...(68 digits omitted)...1248"
								},
								"id": 26,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "31",
									"id": 24,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "915:1:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_1_by_1",
										"typeString": "int_const 1"
									},
									"value": "1"
								},
								"nodeType": "BinaryOperation",
								"operator": "<<",
								"rightExpression": {
									"hexValue": "323531",
									"id": 25,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "920:3:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_251_by_1",
										"typeString": "int_const 251"
									},
									"value": "251"
								},
								"src": "915:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_3618502788666131106986593281521497120414687020801267626233049500247285301248_by_1",
									"typeString": "int_const 3618...(68 digits omitted)...1248"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 32,
							"mutability": "constant",
							"name": "EXECUTE_BIT",
							"nameLocation": "939:11:0",
							"nodeType": "VariableDeclaration",
							"scope": 51,
							"src": "925:36:0",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 28,
								"name": "uint",
								"nodeType": "ElementaryTypeName",
								"src": "925:4:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"commonType": {
									"typeIdentifier": "t_rational_1809251394333065553493296640760748560207343510400633813116524750123642650624_by_1",
									"typeString": "int_const 1809...(68 digits omitted)...0624"
								},
								"id": 31,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "31",
									"id": 29,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "953:1:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_1_by_1",
										"typeString": "int_const 1"
									},
									"value": "1"
								},
								"nodeType": "BinaryOperation",
								"operator": "<<",
								"rightExpression": {
									"hexValue": "323530",
									"id": 30,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "958:3:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_250_by_1",
										"typeString": "int_const 250"
									},
									"value": "250"
								},
								"src": "953:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1809251394333065553493296640760748560207343510400633813116524750123642650624_by_1",
									"typeString": "int_const 1809...(68 digits omitted)...0624"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 35,
							"mutability": "constant",
							"name": "NO_PERMISSIONS",
							"nameLocation": "994:14:0",
							"nodeType": "VariableDeclaration",
							"scope": 51,
							"src": "980:32:0",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 33,
								"name": "uint",
								"nodeType": "ElementaryTypeName",
								"src": "980:4:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30",
								"id": 34,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "1011:1:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 40,
							"mutability": "constant",
							"name": "RWA_BITS",
							"nameLocation": "1028:8:0",
							"nodeType": "VariableDeclaration",
							"scope": 51,
							"src": "1014:33:0",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 36,
								"name": "uint",
								"nodeType": "ElementaryTypeName",
								"src": "1014:4:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"commonType": {
									"typeIdentifier": "t_rational_25329519520662917748906152970650479842902809145608873383631346501730997108736_by_1",
									"typeString": "int_const 2532...(69 digits omitted)...8736"
								},
								"id": 39,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "37",
									"id": 37,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "1039:1:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_7_by_1",
										"typeString": "int_const 7"
									},
									"value": "7"
								},
								"nodeType": "BinaryOperation",
								"operator": "<<",
								"rightExpression": {
									"hexValue": "323531",
									"id": 38,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "1044:3:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_251_by_1",
										"typeString": "int_const 251"
									},
									"value": "251"
								},
								"src": "1039:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_25329519520662917748906152970650479842902809145608873383631346501730997108736_by_1",
									"typeString": "int_const 2532...(69 digits omitted)...8736"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 45,
							"mutability": "constant",
							"name": "DRWA_BITS",
							"nameLocation": "1063:9:0",
							"nodeType": "VariableDeclaration",
							"scope": 51,
							"src": "1049:35:0",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 41,
								"name": "uint",
								"nodeType": "ElementaryTypeName",
								"src": "1049:4:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"commonType": {
									"typeIdentifier": "t_rational_54277541829991966604798899222822456806220305312019014393495742503709279518720_by_1",
									"typeString": "int_const 5427...(69 digits omitted)...8720"
								},
								"id": 44,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "3135",
									"id": 42,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "1075:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_15_by_1",
										"typeString": "int_const 15"
									},
									"value": "15"
								},
								"nodeType": "BinaryOperation",
								"operator": "<<",
								"rightExpression": {
									"hexValue": "323531",
									"id": 43,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "1081:3:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_251_by_1",
										"typeString": "int_const 251"
									},
									"value": "251"
								},
								"src": "1075:9:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_54277541829991966604798899222822456806220305312019014393495742503709279518720_by_1",
									"typeString": "int_const 5427...(69 digits omitted)...8720"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 50,
							"mutability": "constant",
							"name": "RWAX_BITS",
							"nameLocation": "1100:9:0",
							"nodeType": "VariableDeclaration",
							"scope": 51,
							"src": "1086:35:0",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 46,
								"name": "uint",
								"nodeType": "ElementaryTypeName",
								"src": "1086:4:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"commonType": {
									"typeIdentifier": "t_rational_27138770914995983302399449611411228403110152656009507196747871251854639759360_by_1",
									"typeString": "int_const 2713...(69 digits omitted)...9360"
								},
								"id": 49,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "3135",
									"id": 47,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "1112:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_15_by_1",
										"typeString": "int_const 15"
									},
									"value": "15"
								},
								"nodeType": "BinaryOperation",
								"operator": "<<",
								"rightExpression": {
									"hexValue": "323530",
									"id": 48,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "1118:3:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_250_by_1",
										"typeString": "int_const 250"
									},
									"value": "250"
								},
								"src": "1112:9:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_27138770914995983302399449611411228403110152656009507196747871251854639759360_by_1",
									"typeString": "int_const 2713...(69 digits omitted)...9360"
								}
							},
							"visibility": "internal"
						}
					],
					"src": "32:1091:0"
				},
				"id": 0
			},
			"AccessControlledStorage.sol": {
				"ast": {
					"absolutePath": "AccessControlledStorage.sol",
					"exportedSymbols": {
						"AccessControlledStorage": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 52,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AccessControlledStorage",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 53,
								"nodeType": "StructuredDocumentation",
								"src": "57:162:1",
								"text": " AccessControlledStorage interface\n \n Any smart contract that implements this interface can control off-chain storage using the \n Bubble Protocol."
							},
							"fullyImplemented": false,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "AccessControlledStorage",
							"nameLocation": "231:23:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "260:1176:1",
										"text": " Provides the access permissions for off-chain content controlled by this contract.  An \n off-chain storage service calls this method to obtain a specific user's permissions for \n accessing a given file or directory.  The method must return a bit field, with POSIX-like \n bits for terminated, directory, read, write, append and execute (tdrwax).\n \n See AccessControlBits.sol for a complete definition of the bit field returned by this\n method.\n \n Note, the following content IDs are reserved:\n \n   CID  Purpose\n   ---  ------------------------------------------------------------------------------------------\n   0    The root of the bubble itself.  Any user with write permission to id 0 can construct the \n        bubble on an off-chain storage service.  Any user with read permission can list the\n        contents of the bubble's root directory.  ID 0 is always considered a directory and so the \n        Directory Bit permission returned by this contract is ignored.  \n \n @param user the user requesting access\n @param contentId the id of the content (file or directory) being requested"
									},
									"functionSelector": "c48dbf6a",
									"id": 63,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAccessPermissions",
									"nameLocation": "1449:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1479:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1471:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "contentId",
												"nameLocation": "1493:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1485:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1485:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1469:35:1"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1528:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1527:9:1"
									},
									"scope": 64,
									"src": "1440:97:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 65,
							"src": "221:1319:1",
							"usedErrors": []
						}
					],
					"src": "32:1510:1"
				},
				"id": 1
			},
			"ConnectionRelayBubble.sol": {
				"ast": {
					"absolutePath": "ConnectionRelayBubble.sol",
					"exportedSymbols": {
						"APPEND_BIT": [
							27
						],
						"AccessControlledStorage": [
							64
						],
						"BUBBLE_TERMINATED_BIT": [
							7
						],
						"ConnectionRelayBubble": [
							127
						],
						"DIRECTORY_BIT": [
							12
						],
						"DRWA_BITS": [
							45
						],
						"EXECUTE_BIT": [
							32
						],
						"NO_PERMISSIONS": [
							35
						],
						"READ_BIT": [
							17
						],
						"RWAX_BITS": [
							50
						],
						"RWA_BITS": [
							40
						],
						"WRITE_BIT": [
							22
						]
					},
					"id": 128,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "AccessControlledStorage.sol",
							"file": "./AccessControlledStorage.sol",
							"id": 67,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 128,
							"sourceUnit": 65,
							"src": "58:39:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "AccessControlBits.sol",
							"file": "./AccessControlBits.sol",
							"id": 68,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 128,
							"sourceUnit": 51,
							"src": "98:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 69,
										"name": "AccessControlledStorage",
										"nameLocations": [
											"168:23:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "168:23:2"
									},
									"id": 70,
									"nodeType": "InheritanceSpecifier",
									"src": "168:23:2"
								}
							],
							"canonicalName": "ConnectionRelayBubble",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 127,
							"linearizedBaseContracts": [
								127,
								64
							],
							"name": "ConnectionRelayBubble",
							"nameLocation": "143:21:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 74,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "212:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 127,
									"src": "197:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 71,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "197:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"expression": {
											"id": 72,
											"name": "msg",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967281,
											"src": "220:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_message",
												"typeString": "msg"
											}
										},
										"id": 73,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberLocation": "224:6:2",
										"memberName": "sender",
										"nodeType": "MemberAccess",
										"src": "220:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 77,
									"mutability": "mutable",
									"name": "terminated",
									"nameLocation": "239:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 127,
									"src": "234:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 75,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "234:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 76,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "252:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										63
									],
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "368:191:2",
										"statements": [
											{
												"condition": {
													"id": 87,
													"name": "terminated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 77,
													"src": "378:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 90,
																"name": "contentId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "433:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "446:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "433:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 93,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "451:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 94,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "459:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "451:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "433:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 99,
																		"name": "DIRECTORY_BIT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 12,
																		"src": "505:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"id": 100,
																		"name": "READ_BIT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 17,
																		"src": "521:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "505:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "|",
																"rightExpression": {
																	"id": 102,
																	"name": "WRITE_BIT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "532:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "505:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "|",
															"rightExpression": {
																"id": 104,
																"name": "APPEND_BIT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "544:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "505:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 86,
														"id": 106,
														"nodeType": "Return",
														"src": "498:56:2"
													},
													"id": 107,
													"nodeType": "IfStatement",
													"src": "429:125:2",
													"trueBody": {
														"expression": {
															"id": 97,
															"name": "NO_PERMISSIONS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "473:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 86,
														"id": 98,
														"nodeType": "Return",
														"src": "466:21:2"
													}
												},
												"id": 108,
												"nodeType": "IfStatement",
												"src": "374:180:2",
												"trueBody": {
													"expression": {
														"id": 88,
														"name": "BUBBLE_TERMINATED_BIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "397:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 86,
													"id": 89,
													"nodeType": "Return",
													"src": "390:28:2"
												}
											}
										]
									},
									"functionSelector": "c48dbf6a",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAccessPermissions",
									"nameLocation": "271:20:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 83,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "341:8:2"
									},
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "301:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "293:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "293:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "contentId",
												"nameLocation": "315:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "307:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:35:2"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "359:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "359:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "358:9:2"
									},
									"scope": 127,
									"src": "262:297:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "593:83:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 114,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "607:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "611:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "607:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 116,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "621:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "607:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7065726d697373696f6e2064656e696564",
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "628:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93ad9a0f047d986104837a655695175c2f157f5237cec4cec94702ccbba7538f",
																"typeString": "literal_string \"permission denied\""
															},
															"value": "permission denied"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93ad9a0f047d986104837a655695175c2f157f5237cec4cec94702ccbba7538f",
																"typeString": "literal_string \"permission denied\""
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "599:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "599:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "599:49:2"
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "terminated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "654:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "667:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "654:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "654:17:2"
											}
										]
									},
									"functionSelector": "0c08bf88",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "terminate",
									"nameLocation": "572:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "581:2:2"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:0:2"
									},
									"scope": 127,
									"src": "563:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 128,
							"src": "134:545:2",
							"usedErrors": []
						}
					],
					"src": "33:646:2"
				},
				"id": 2
			}
		}
	}
}